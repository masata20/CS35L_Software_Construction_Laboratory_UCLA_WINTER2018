
Name: Masataka Mori

EACH COLUNM MUST BE SEPARATED BY TAB
1st column: The first column gives the machine address of the instruction,
			in hexadecimal (without leading 0x or excess leading 0). 

2nd colunm: The second column gives the bytes of the machine instruction, 
			in hexadecimal (without leading 0x) separated by single spaces.

3rd colunm: The third column gives the assembly-language equivalent of the second column,
			using the notation that GDB uses after you execute the command set 
			disassemble-next-line on, except with a single space separating each column.

4th colunm: The fourth column gives the effect of the instruction on memory 
			and general-purpose registers, again using unsigned hexadecimal
			in the same style as the first column.

EXAMPLE: 5477fd	41 57	push %r15	 M8[7fffffffd380]=0 rsp=7fffffffd380
	The example above stores 0 into the 8-byte word at address 7fffffffd380 
	(because r15 happens to be zero); the "8" in "M8" stands for an 8-byte memory access.
	The example also sets the rsp register to 7fffffffd380.


544fb0	48 89 f2	mov %rsi %rdx	rdx=7fffffffd620 rip=544fb3
544fb3	48 89 fe	mov %rdi %rsi	rsi=2 rip=544fb6
544fb6	bf 02 00 00 00	mov $0x2 %edi	edi=2 rip=544fbb
544fbb	e9 20 fd ff ff	jmp 0x5ffce0 <arith_driver>	rip=544ce0
544ce0	41 57	push %r15	M8[7fffffffd610]=ffffd620 rip=544ce2 rsp=7fffffffd610
544ce2	41 56	push %r14	M8[7fffffffd608]=0 rip=544ce4 rsp=7fffffffd608
544ce4	41 55	push %r13	M8[7fffffffd600]=1a0 rip=544ce6 rsp=7fffffffd600
544ce6	41 54	push %r12	M8[7fffffffd5f8]=b20568 rip=544ce8 rsp=7fffffffd5f8
544ce8	55	push %rbp	M8[7fffffffd5f0]=ffffd6f0 rip=544ce9 rsp=7fffffffd5f0
544ce9	53	push %rbx	M8[7fffffffd5e8]=ffffd630 rip=544cea rsp=7fffffffd5e8
544cea	48 83 ec 18	sub $0x18 %rsp	rip=544cee rsp=7fffffffd5d0
544cee	83 ff 02	cmp $0x2 %edi	rip=544cf1
544cf1	0f 82 39 02 00 00	jb 0x544f30 <arith_driver+592> rip=544cf7  // didn't jump
544cf7	41 bc 01 00 00 00	mov $0x1 %r12d	rip=544cfd r12d=1
544cfd	88 ff 03	cmp $0x3 %edi	rip=544d00
544d00	76 10	jbe 0x544d12 <arith_driver+50>	rip=544d12             // did jump
544d12	48 85 f6	test %rsi %rsi	rip=544d15
544d15	0f 83 e1 00 00 00	jle 0x544dfc <arith_driver+284>	rip=544d1b // didn't jump
544d1b	49 89 d7	mov %rdx %r15	rip=544d1e	r15=7fffffffd620
544d1e	48 89 f5	mov %rsi %rbp	rbp=2 rip=544d21
544d21	41 89 fe	mov %edi %r14d	rip=544d24 r14=2
544d24	4c 89 64 24 08	mov %r12 0x8(%rsp)	M8[7fffffffd5d8]=1 rip=544d29
544d29	31 db	xor %ebx %ebx	rbx=0 rip=544d2b
544d2b	45 31 ed	xor %r13d %r13d	rip=544d2e r13=0
544d2e	48 c7 04 24 00 00 00 00	movq $0x0 (%rsp)	M8[7fffffffd5d0]=0 rip=544d36
544d36	66 2e 0f 1f 84 00 00 00 00 00	nopw %cs:0x0(%rax,%rax,1)	rip=544d40
544d40	4b 8b 3c ef	mov (%r15,%r13,8) %rdi	rdi=12a174b42 rip=544d44
544d44	89 f8	mov %edi %eax	rax=2a174b42 rip=544d46
544d46	89 fa	mov %edi %edx	rdx=2a174b42 rip=544d48
544d48	83 e0 07	and $0x7 %eax	rax=2 rip=544d4b
544d4b	83 f8 01	cmp $0x1 %eax	rip=544d4e
544d4e	74 76	je 0x544dc6 <arith_driver+230>	rip=544d50            //didn't jump
544d50	83 e2 03	and $0x3 %edx	rdx=2 rip=544d53
544d53	83 fa 02	cmp $0x2 %edx	rip=544d56
544d56	74 05	je 0x544d5d <arith_driver+125>	rip=0x544d5d	      // did jump
544d58	83 f8 07	cmp $0x7 %eax                                 // skipped
544d5b	75 7d	jne 0x544dda <arith_river+250>                    // skipped
544d5d	83 f8 07	cmp $0x7 %eax	rip=544d60
544d60	0f 84 65 01 00 00	je 0x544ecb <arith_driver+491>	rip=544d66 //didn't jump
544d66	4b 89 3c ef	mov %rdi (%r15,%r13,8)	M8[7fffffffd620]=2a174b42 rip=544d6a   // 1 is cut off
544d6a	48 c1 ff 02	sar $0x2 %rdi	rdi=4a85d2d0 rip=544d6e
544d6e	41 83 fe 08	cmp $0x8 %r14d	rip=544d72
544d72	0f 87 08 01 00 00	ja	0x544e80 <arith_driver+416>	rip=544d78  // didn't jump
544d78	44 89 f0	mov %r14d %eax	rax=2 rip=544d7b
544d7b	ff 24 c5 38 af 5e 00	jmpq *0x5eaf38(,%rax,8)	rip=544e50     // jumped
544d82	66 0f 1f 44 00 00	nopw 0x0(%rax,%rax,1)                     // skpped
544e50	49 0f af fc	imul %r12 %rdi	rdi=4a85d2d0 rip=544e54
544e54	0f 90 c0	seto %al	rax=0 rip=544e57
544e57	49 89 fc	mov %rdi %r12	rip=544e5a r12=4a85d2d0
544e5a	09 c3	or %eax %ebx	rbx=0 rip=544e5c
544e5c	e9 3f ff ff ff	jmpq 0x544da0 <arith_driver+192>	rip=544da0  // did jump
544e61	0f 1f 80 00 00 00 00	nopl 0x0(%rax)							// skipped
544da0	49 83 c5 01	add $0x1 %r13	rip=544da4 r13=1
544da4	4c 39 ed	cmp %r13 %rbp	rip=544da7
544da7	74 53	je 0x544dfc <arith_driver+284>	rip=544da9      //didn't jump
544da9	84 db	test %bl %bl	rip=544dab
544dab	0f 84 ef 00 00 00	je 0x544ea0 <arith_driver+448>	rip=544ea0 // did jump
544ea0	4c 89 64 24 08	mov %r12 0x8(%rsp)	M8[7fffffffd5d8]=4a85d2d0 rip=544ea5
544ea5	4c 89 2c 24	mov %r13 (%rsp)	M8[7fffffffd5d0]=1 rip=544ea9
544ea9	e9 92 fe ff ff	jmpq 0x544d40 <arith_driver+96>	rip=544d40    //did jump
544eae	66 90	xchg %ax %ax										 // skipped
544d40	4b 8b 3c ef	mov	(%r15,%r13,8) %rdi	rdi=fffffffe484b9b06 rip=544d44
544d44	89 f8	mov %edi %eax	rax=484b9b06 rip=544d46
544d46	89 fa	mov %edi %edx	rdx=484b9b06 rip=544d48
544d48	83 e0 07	and $0x7 %eax	rax=6 rip=544d4b
544d4b	83 f8 01	cmp $0x1 %eax	rip=544d4e
544d4e	74 76	je 0x544dc6 <arith_driver+230>	rip=544d50			//didn't jump
544d50	83 e2 03	and $0x3 %edx	rdx=2 rip=544d53
544d53	83 fa 02	cmp $0x2 %edx	rip=544d56
544d56	74 05	je 0x544d5d <arith_driver+125>	rip=544d5d          //did jump
544d58	83 f8 07	cmp $0x7 %eax									//skipped
544d5b	75 7d	jne 0x544dda <arith_driver+250>						//skipped
544d5d	83 f8 07	cmp $0x7 %eax	rip=544d60
544d60	0f 84 65 01 00 00	je 0x544ecb <arith_driver+491>	rip=544d66 //didn't jump
544d66	4b 89 3c ef	mov %rdi (%r15,%r13,8)	M8[7fffffffd628]=484b9b06  rip=0x544d6a	 // cutted off
544d6a	48 c1 ff 02	sar $0x2 %rdi	rdi=ffffffff9212e6c1 rip=544d6e
544d6e	41 83 fe 08	cmp $0x8 %r14d	rip=544d72
544d72	0f 87 08 01 00 00	ja 0x544e80 <arith_driver+416>	rip=544d78  //didn't jump
544d78	44 89 f0	mov %r14d %eax	rax=2 rip=544d7b
544d7b	ff 24 c5 38 af 5e 00	jmpq *0x5eaf38(,%rax,8)	rip=544e50	//did jump
544d82	66 0f 1f 44 00 00	nopw 0x0(%rax,%rax,1)						//skipped
544e50	49 0f af fc	imul %r12 %rdi	rdi=dfffffffdceaced0 rip=544e54
544e54	0f 90 c0	seto %al	rax=0 rip=544e57
544e57	49 89 fc	mov %rdi %r12	rip=544e5a r12=dfffffffdceaced0
544e5a	09 c3	or  %eax %ebx	rbx=0 rip=544e5c
544e5c	e9 3f ff ff ff	jmpq  0x544da0 <arith_driver+192>	rip=544da0	// jumped
544e61	0f 1f 80 00 00 00 00	nopl 0x0(%rax)                          //skipped
544da0	49 83 c5 01	add $0x1 %r13	rip=544da4 r13=2
544da4	4c 39 ed	cmp %r13 %rbp	rip=544da7
544da7	74 53	je 0x544dfc <arith_driver+284>	rip=544dfc				//jumped
544dfc	4a 8d 04 a5 02 00 00 00	lea 0x2(,%r12,4) %rax	rax=7fffffff73ab3b42 rip=544dfc
544e04	48 83 c4 18	add $0x18 %rsp	rsp=7fffffffd5e8 rip=544e08
544e08	5b	pop %rbx	rbx=7fffffffd630 rip=544e09 rsp=7fffffffd5f0 
544e09	5d	pop %rbp	rbp=7fffffffd6f0 rip=544e0a rsp=7fffffffd5f8 
544e0a	41 5c	pop %r12	rip=544e0c rsp=7fffffffd600 r12=b20568 
544e0c	41 5d	pop %r13	rip=544e0e rsp=7fffffffd608 r13=1a0 
544e0e	41 5e	pop %r14	rip=544e10 rsp=7fffffffd610 r14=0 
544e10	41 5f	pop %r15	rip=544e12 rsp=7fffffffd618 r15=7fffffffd620 
544e12	c3	retq	rip=55a119 rsp=7fffffffd620
544e13	0f 1f 44 00 00	nopl 0x0(%rax,%rax,1)   // skipped since return
55a119	48 83 2d 87 49 62 00 01	subq $0x1 0x624987(%rip)	M8[b7eaa0]=0 rip=55a121
55a121	48 89 c3	mov %rax %rbx	rbx=7fffffff73ab3b42 rip=55a124
55a124	48 8b 05 95 d1 64 00	mov 0x64d195(%rip) %rax # 0xba72c0 <specpdl>	rax=1027c70 rip=55a12b
55a12b	42 f6 44 28 01 01	testb $0x1 0x1(%rax,%r13,1)	rip=55a131  
55a131	75 73	jne 0x55a1a6 <eval_sub+1702>	rip=55a133        // didn't jump
55a133	80 bd 78 ff ff ff 00	cmpb $0x0 -0x88(%rbp)	rip=55a13a
55a13a	0f 84 d9 fd ff ff	je 0x559f19 <eval_sub+1049>	rip=559f19  // did jump
559f19	48 83 2d d7 d3 64 00 20	subq $0x20 0x64d3d7(%rip)	M8[ba72f8]=1027e10 rip=559f21
559f21	e9 10 fc ff ff	jmpq 0x559b36 <eval_sub+54>	rip=559b36
559b36	48 8d 65 d8	lea -0x28(%rbp) %rsp	rip=559b3a rsp=7fffffffd6c8
559b3a	48 89 d8	mov	%rbx %rax	rax=7fffffff73ab3b42 rip=559b3d
559b3d	5b	pop	%rbx	rbx=7fffffffd738 rip=559b3e rsp=7fffffffd6d0
559b3e	41 5c	pop %r12	rip=559b40 rsp=7fffffffd6d8 r12=b24650
559b40	41 5d	pop %r13	rip=559b42 rsp=7fffffffd6e0 r13=c
559b42	41 5e	pop %r14	rip=559b44 rsp=7fffffffd6e8 r14=106cf73
559b44	41 5f	pop %r15	rip=559b46 rsp=7fffffffd6f0 r15=2
559b46	5d	pop %rbp	rbp=7fffffffd7a0 rip=559b47 rsp=7fffffffd6f8
559b47	c3	retq	rip=559e3d rsp=7fffffffd700       // jump!!
559b48	0f 1f 84 00 00 00 00 00	nopl 0x0(%rax,%rax,1)  //skipped
559e3d	48 8b b5 70 ff ff ff	mov -0x90(%rbp),%rsi	rip=559e44 rsi=7fffffffd730
559e44	4c 89 f7	mov %r14 %rdi	rdi=106cf73 rip=559e47
559e47	48 89 06	mov %rax (%rsi)	M8[7fffffffd730]=73ab3b42 rip=559e4a	//cut off
559e4a	e8 71 b2 fe ff	callq 0x5450c0 <Fcdr>	rsp=7fffffffd6f8 rip=5450c0
5450c0	89 f8	mov %edi %eax	rax=106cf73 rip=5450c2
5450c2	83 e0 07	and $0x7 %eax	rax=3 rip=5450c5
5450c5	83 f8 03	cmp $0x3 %eax	rip=5450c8
5450c8	74 0e	je 0x5450d8 <Fcdr+24>	rip=5450d8	// did jump
5450d8	48 8b 7f 05	mov  0x5(%rdi) %rdi	rdi=0 rip=5450dc
5450dc	48 89 f8	mov %rdi %rax	rax=0 rip=5450df
5450df	c3	retq	rip=59e4f rsp=7fffffffd700
559e4f	48 39 9d 68 ff ff ff	cmp %rbx -0x98(%rbp)	rip=559e56
559e56	48 89 de	mov %rbx %rsi	rip=559e59 rsi=7fffffffd738
559e59	49 89 c6	mov %rax %r14	rip=559e5c r14=0
559e5c	48 8b 8d 78 ff ff ff	mov -0x88(%rbp),%rcx	rcx=1 rip=559e63
559e63	0f 84 d5 00 00 00	je  0x559f3e <eval_sub+1086>	rip=559e69
559e69	48 83 c3 08	add $0x8 %rbx	rbx=7fffffffd740 rip=0x559e6d
559e6d	eb b0	jmp 0x559e1f <eval_sub+799>	rip=559e1f
559e1f	4c 89 f7	mov %r14 %rdi	rdi=0 rip=559e22
559e22	48 89 8d 78 ff ff ff	mov %rcx -0x88(%rbp)	M8[7fffffffd718]=1 rip=0x559e29
559e29	48 89 b5 70 ff ff ff	mov %rsi -0x90(%rbp)	M8[7fffffffd710]=ffffd738 rip=559e30 //cut off
559e30	e8 4b b2 fe ff	callq 0x545080 <Fcar>	rip=0x545080 rsp=7fffffffd6f8
559e35	48 89 c7	mov  %rax %rdi					//skipped
559e38	e8 c3 fc ff ff	callq 0x559b00 <eval_sub>  //skipped
559e3d	48 8b b5 70 ff ff ff	mov -0x90(%rbp) %rsi//skipped
545080	89 f8	mov %edi %eax	rax=0 rip=545082
545082	83 e0 07	and $0x7 %eax	rax=0 rip=545085
545085	83 f8 03	cmp $0x3 %eax	rip=545088
545088	74 0e	je 0x545098 <Fcar+24>	rip=54508a	//didn't jump
54508a	48 85 ff	test %rdi %rdi	rip=54508d
54508d	75 11	jne 0x5450a0 <Fcar+32>	rip=54508f	//didnn't jump
54508f	48 89 f8	mov %rdi %rax	rax=0 rip=545092
545092	c3	retq	rip=559e35 rsp=7fffffffd700
545093	0f 1f 44 00 00	nopl  0x0(%rax,%rax,1)	//skipped
559e35	48 89 c7	mov %rax %rdi	rdi=0 rip=0x559e38
559e38	e8 c3 fc ff ff	callq 0x559b00 <eval_sub>	rip=559b00 rsp=7fffffffd6f8
559e3d	48 8b b5 70 ff ff ff	mov     -0x90(%rbp) %rsi	//skipped
559b00	55	push %rbp	M8[7fffffffd6f0]=ffffd7a0 rip=559b01 rsp=7fffffffd6f0
559b01	89 f8	mov	%edi %eax	rax=0 rip=559b03
559b03	48 89 e5	mov %rsp %rbp	rbp=fffffffd6f0 rip=559b06
559b06	41 57	push %r15	M8[7fffffffd6e8]=2 rip=559b08 rsp=7fffffffd6e8
559b08	41 56	push %r14	M8[7fffffffd6e0]=0 rip=559b0a rsp=7fffffffd6e0
559b0a	41 55	push %r13	M8[7fffffffd6d8]=c rip=559b0c rsp=7fffffffd6d8
559b0c	41 54	push %r12	M8[7fffffffd6d0]=b24650 rip=559b0e rsp=7fffffffd6d0
559b0e	49 89 fc	mov %rdi %r12	rip=559b11 r12=0
559b11	53	push %rbx	M8[7fffffffd6c8]=ffffd740 rip=559b12 rsp=7fffffffd6c8	//cut off
559b12	48 83 ec 78	sub $0x78 %rsp	rip=559b16 rsp=7fffffffd650
559b16	83 e0 07	and $0x7 %eax	rax=0 rip=559b19
559b19	75 35	jne	0x559b50 <eval_sub+80>	rip=559b1b
559b1b	48 8b 35 5e cc 63 00	mov 0x63cc5e(%rip),%rsi # 0xb96780 <globals+1248>	rip=559b22 rsi=0
559b22	48 85 f6	test  %rsi %rsi	rip=559b25
559b25	0f 85 a5 00 00 00	 jne 0x559bd0 <eval_sub+208>	rip=559b2b  // didn't jump
559b2b	4c 89 e7	mov %r12 %rdi	rdi=0 rip=559b2e
559b2e	e8 3d dc fe ff	callq 0x547770 <Fsymbol_value>	rip=547770 rsp=7fffffffd648
559b33	48 89 c3	mov  %rax %rbx	//skipped
547770	53	push %rbx	M8[7fffffffd640]=ffffd740 rip=547771 rsp=7fffffffd640 // cut off
547771	48 89 fb	mov %rdi %rbx	rbx=0 rip=547774
547774	e8 67 ff ff ff	callq 0x5476e0 <find_symbol_value>	rip=5476e0 rsp=0x7fffffffd638
5476e0	53	push %rbx	M8[7fffffffd630]=0 rip=5476e1 rsp=7fffffffd630
5476e1	40 f6 c7 07	test $0x7 %dil	rip=5476e5
5476e5	75 77	jne 0x54775e <find_symbol_value+126>	rip=5476e7	//jumped
5476e7	48 81 c7 b0 73 ba 00	add $0xba73b0 %rdi	rdi=ba73b0 rip=5476ee
5476ee	0f b6 17	movzbl (%rdi) %edx	rdx=98 rip=5476f1
5476f1	d0 ea	shr %dl	rdx=4c rip=5476f3
5476f3	83 e2 07	and $0x7 %edx	rdx=4 rip=5476f6
5476f6	80 fa 02	cmp $0x2,%dl	rip=5476f9
5476f9	74 3f	je	0x54773a <find_symbol_value+90>	rip=5476fb
5476fb	76 23	jbe	0x547720 <find_symbol_value+64>	rip=5476fd
5476fd	80 fa 03	cmp $0x3 %dl	rip=547700
547700	74 0e	je 0x547710 <find_symbol_value+48>	rip=547702
547702	80 fa 04	cmp $0x4 %dl	rip=547705
547705	75 52	jne 0x547759 <find_symbol_value+121>	rip=547707
547707	48 8b 47 10	mov 0x10(%rdi),%rax	rax=0 rip=54770b
54770b	5b	pop	%rbx	rbx=0 rip=54770c rsp=7fffffffd638
54770c	c3	retq	rip=547779 rsp=7fffffffd640
54770d	0f 1f 00	nopl (%rax)
547779	48 3d 80 b8 00 00	cmp $0xb880 %rax	rip=54777f
54777f	74 02	je 0x547783 <Fsymbol_value+19>	rip=547781       //didn't jump
547781	5b	pop %rbx	rbx=7fffffffd740 rip=547782 rsp=0x7fffffffd648
547782	c3	retq	rip=559b33 rsp=7fffffffd650
559b33	48 89 c3	mov %rax %rbx	rbx=0 rip=559b36
559b36	48 8d 65 d8	lea -0x28(%rbp),%rsp	rip=559b3a rsp=7fffffffd6c8
559b3a	48 89 d8	mov %rbx %rax	rax=0 rip=559b3d 
559b3d 	5b	pop %rbx	rbx=7fffffffd740 rip=559b3e rsp=7fffffffd6d0
559b3e	41 5c	pop %r12	rip=559b40 rsp=7fffffffd6d8 r12=b24650
559b40	41 5d	pop %r13	rip=559b42 rsp=7fffffffd6e0 r13=c
559b42	41 5e	pop %r14	rip=559b44 rsp=7fffffffd6e8 r14=0
559b44	41 5f	pop %r15	rip=559b46 rsp=7fffffffd6f0 r15=2
559b46	5d	pop	%rbp	rbp=7fffffffd7a0 rip=559b47 rsp=7fffffffd6f8
559b47	c3	retq	rip=559e3d rsp=7fffffffd700
559b48	0f 1f 84 00 00 00 00 00	nopl 0x0(%rax,%rax,1) // skipped
559e3d	48 8b b5 70 ff ff ff	mov -0x90(%rbp) %rsi	rsi=7fffffffd738 rip=559e44
559e44	4c 89 f7	mov %r14 %rdi	rdi=0 rip=559e47
559e47	48 89 06	mov %rax (%rsi)	M8[7fffffffd738]=0 rip=559e4a
559e4a	e8 71 b2 fe ff	callq 0x5450c0 <Fcdr>	rip=5450c0 rsp=7fffffffd6f8
5450c0	89 f8	mov %edi %eax	rax=0 rip=5450c2
5450c2	83 e0 07	and $0x7 %eax	rax=0 rip=5450c5
5450c5	83 f8 03	cmp  $0x3 %eax	rip=5450c8
5450c8	74 0e	je 0x5450d8 <Fcdr+24>	rip=5450ca
5450ca	48 85 ff	test %rdi %rdi	rip=5450cd
5450cd	75 11	jne 0x5450e0 <Fcdr+32>	rip=5450cf
5450cf	48 89 f8	mov %rdi %rax	rax=0 rip=5450d2
5450d2	c3	retq	rip=0x559e4f rsp=7fffffffd700
5450d3	0f 1f 44 00 00	nopl 0x0(%rax,%rax,1)
559e4f	48 39 9d 68 ff ff ff	cmp %rbx,-0x98(%rbp)	rip=559e56
559e56	48 89 de	mov %rbx %rsi	rip=559e59 rsi=7fffffffd740
559e59	49 89 c6	mov %rax %r14	rip=559e5c r14=0
559e5c	48 8b 8d 78 ff ff ff	mov  -0x88(%rbp) %rcx	rcx=1 rip=559e63
559e63	0f 84 d5 00 00 00	je 0x559f3e <eval_sub+1086>	rip=559f3e	//jump!
559e69	48 83 c3 08	add $0x8,%rbx	rip=559e6d	//skipped
559e6d	eb b0	jmp	0x559e1f <eval_sub+799>			/skipped
559f3e	48 8b 9d 60 ff ff ff	mov -0xa0(%rbp) %rbx	rbx=180 rip=559f45
559f45	48 8d 45 90	lea -0x70(%rbp) %rax	rax=7fffffffd730 rip=559f49
559f49	48 03 1d 70 d3 64 00	add 0x64d370(%rip) %rbx        # 0xba72c0 <specpdl>	rbx=1027df0 rip=559f50
559f50	48 89 43 10	mov %rax 0x10(%rbx)	M8[1027e00]=ffffd730 rip=559f54	 //cut off
559f54	49 8b 44 24 08	mov 0x8(%r12) %rax	rax=575460 rip=559f59
559f59	48 89 4b 18	mov %rcx 0x18(%rbx) M8[1027e08]=1 rip=559f5d
559f5d	66 41 83 ff 08	cmp	$0x8 %r15w	rip=559f62
559f62	0f 87 e9 00 00 00	ja 0x55a051 <eval_sub+1361>	rip=0x559f68	// not jump
559f68	45 0f b7 ff	movzwl %r15w %r15d	r15=2	rip=559f6c
559f6c	42 ff 24 fd 30 d1 5e 00	jmpq *0x5ed130(,%r15,8)	rip=55a00f
55a00f	48 8b 75 98	mov -0x68(%rbp) %rsi	rsi=0 rip=55a013
55a013	48 8b 7d 90	mov -0x70(%rbp) %rdi	rdi=7fffffff73ab3b42 rip=55a017
55a017	ff d0	callq *%rax	rip=575460 rsp=7fffffffd6f8
55a019	48 89 c3	mov %rax %rbx	//skipped
575460	55	push %rbp	M8[7fffffffd6f0]=ffffd7a0 rip=575461 rsp=7fffffffd6f0
575461	48 89 e5	mov %rsp %rbp	rbp=7fffffffd6f0 rip=575464
575464	41 57	push %r15	M8[7fffffffd6e8]=2 rip=575466 rsp=7fffffffd6e8
575466	49 89 ff	mov %rdi %r15	r15=7fffffff73ab3b42 rip=575469
575469	41 56	push %r14	M8[7fffffffd6e0]=0 rip=57546b rsp=7fffffffd6e0
57546b 	41 55	push %r13	M8[7fffffffd6d8]=c rip=57546d rsp=7fffffffd6d8
57546d	41 54	push %r12	M8[7fffffffd6d0]=b24650 rip=57546f rsp=7fffffffd6d0
57546f 	53	push %rbx	M8[7fffffffd6c8]=1027df0 rip=575470 rsp=7fffffffd6c8
575470	48 83 ec 48	sub $0x48 %rsp	rip=575474 rsp=7fffffffd680
575474	48 8b 05 7d 1e 63 00	mov 0x631e7d(%rip) %rax        # 0xba72f8 <specpdl_ptr>	rax=1027e10 rip=57547b
57547b	48 2b 05 3e 1e 63 00	sub 0x631e3e(%rip) %rax        # 0xba72c0 <specpdl>	rax=1a0 rip=575482
575482	4c 8b 2d 17 fe 61 00	mov 0x61fe17(%rip),%r13        # 0xb952a0 <current_buffer>	rip=575489 r13=beff40
575489	48 c1 f8 05	sar  $0x5 %rax	rax=d rip=57548d
57548d	48 89 45 c0	mov  %rax -0x40(%rbp)	M8[7fffffffd6b0]=d rip=575491
575491	49 8b 85 38 01 00 00	mov 0x138(%r13) %rax	rax=ae00 rip=575498
575498	48 85 f6	test %rsi %rsi	rip=57549b
57549b	0f 85 8f 00 00 00	jne 0x575530 <Fprint+208>	rip=5754a1
5754a1	48 8b 1d e8 16 62 00	mov 0x6216e8(%rip) %rbx	# 0xb96b90 <globals+2288>
rbx=ae00 rip=5754a8
5754a8	48 85 db	test %rbx %rbx	rip=5754ab
5754ab	0f 85 82 00 00 00	jne 0x575533 <Fprint+211>	rip=575533   //jump!!
5754b1	c7 45 cc 00 00 00 00	movl $0x0 -0x34(%rbp)	 //skip
5754b8	80 3d bc cf 61 00 00	cmpb $0x0 0x61cfbc(%rip) # 0xb9247b <noninteractive>
//skip
5754bf	0f 84 bb 03 00 00	je 0x575880 <Fprint+1056>  //skip
575533	89 d9	mov %ebx %ecx	rcx=ae00 rip=575535
575535	83 e1 07	and $0x7 %ecx	rcx=0 rip=575538
575538	89 4d cc	mov %ecx,-0x34(%rbp)	M8[7fffffffd6bc]=0 rip=57553b
57553b	83 f9 05	cmp	$0x5 %ecx	rip=57553e
57553e	0f 85 54 02 00 00	jne 0x575798 <Fprint+824>	rip=575798   //jumped
575798	83 7d cc 01	cmpl $0x1,-0x34(%rbp)	rip=57579c
57579c	75 ba	jne 0x575758 <Fprint+760>	rip=575758
57579e	66 81 7b ff ac 5e	cmpw $0x5eac,-0x1(%rbx)		//skipped
575758	48 81 fb 00 ae 00 00	cmp $0xae00 %rbx	rip=57575f 
57575f	0f 84 53 fd ff ff	je 0x5754b8 <Fprint+88>	rip=5754b8	//jump
5754b8	80 3d bc cf 61 00 00	cmpb $0x0 0x61cfbc(%rip)        # 0xb9247b <noninteractive>	rip=5754bf			//M8[b9247b]=1 so false
5754bf	0f 84 bb 03 00 00	je  0x575880 <Fprint+1056>	rip=5754c5
5754c5	be 00 ae 00 00	mov $0xae00 %esi	rsi=ae00 rip=5754ca
5754ca	bf 0a 00 00 00	mov $0xa %edi	rdi=a rip=5754cf
5754cf	e8 8c ad ff ff	callq 0x570260 <printchar>	rip=570260 rsp=7fffffffd678
570260	41 54	push %r12	M8[7fffffffd670]=b24650 rip=570262 rsp=7fffffffd670
570262	49 89 f4	mov %rsi %r12	r12=ae00 rip=570265
570265	55	push %rbp	M8[7fffffffd668]=ffffd6f0 rip=570266 rsp=7fffffffd668
570266	53	push %rbx	M8[7fffffffd660]=ae00 rip=570267 rsp=7fffffffd660
570267	89 fb	mov %edi %ebx	rbx=a rip=0x570269
570269	48 83 ec 10	sub $0x10 %rsp	rsp=7fffffffd650 rip=57026d
57026d	48 85 f6	test %rsi %rsi	rip=570270
570270	74 0d	je 0x57027f <printchar+31>	rip=570272
570272	48 81 fe 00 ae 00 00	cmp $0xae00 %rsi	rip=570279
570279	0f 85 11 01 00 00	jne 0x570390 <printchar+304>	rip=57027f
57027f	83 fb 7	cmp $0x7f %ebx	rip=570282
570282	0f 87 b8 00 00 0	ja 0x570340 <printchar+224>	rip=570288
570288	88 5c 24 0b	mov %bl 0xb(%rsp)	M8[7fffffffd65b]=a rip=57028c
57028c	bd 01 00 00 00	mov $0x1 %ebp	rbp=1 rip=570291
570291	48 83 3d d7 67 62 00 00 cmpq   $0x0,0x6267d7(%rip)        # 0xb96a70 <globals+2000>	M8[b96a70]=0 rip=570299		//cmp success
570299	74 0e	je 0x5702a9 <printchar+73>	rip=5702a9
5702a9	0f b6 05 71 22 62 00	movzbl 0x62271(%rip) %eax	rax=0 rip=5702b0
5702b0	84 c0	test %al %al	rip=5702b2
5702b2	0f 85 80 01 00 00	jne  0x570438 <printchar+472>	rip=5702b8
5702b8	4d 85 e4	test %r12 %r12	rip=5702bb
5702bb	0f 85 ef 00 00 00	jne 0x5703b0 <printchar+336>	rip=5703b0
5703b0	80 3d c4 20 62 00 00	cmpb $0x0 0x6220c4(%rip) # 0xb9247b <noninteractive>  rip=5703b7                 //M[b9247b]=1 so was false
5703b7	0f 84 b3 00 00 00	je  0x570470 <printchar+528>	rip=5703bd	
5703bd	48 8b 05 bc 67 62 00	mov  0x6267bc(%rip),%rax # 0xb96b80 <globals+2272>	rax=0 rip=5703c4
5703c4	89 1d 26 e9 60 00	mov %ebx 0x60e926(%rip) # 0xb7ecf0 <printchar_stdout_last>	M[b7ecf0]=a rip=5703ca
5703ca 	48 8b 0d 1f 76 5b 00	mov  0x5b761f(%rip) %rcx # 0xb279f0 <stdout@@GLIBC_2.2.5>	rip=5703d1
5703d1 	89 c2	mov %eax %edx	rdx=0 rip=5703d3
5703d3	83 e2 07	and $0x7 %edx	rdx=0 rip=5703d6
5703d6	83 fa 05	cmp $0x5 %edx	rip=5703d9
5703d9	75 35	jne 0x570410 <printchar+432>	rip=570410
570410	48 8d 7c 24 0b lea 0xb(%rsp) %rdi	rdi=7fffffffd65b rip=570415
570415	48 63 d5	movslq %ebp,%rdx	rdx=1 rip=570418
570418	be 01 00 00 00	mov $0x1,%esi	rsi=1 rip=57041d
57041d	e8 2e 76 ea ff	callq 0x417a50 <fwrite@plt>	rip=417a50 rsp=7fffffffd648
417a50	ff 25 da f1 41 00	jmpq *0x41f1da(%rip)        # 0x836c30 <fwrite@got.plt>	rip=417a56
417a56	68 83 03 00 00	pushq $0x383	M8[7fffffffd640]=383 rip=417a5b rsp=7fffffffd640
417a5b	e9 b0 c7 ff ff	jmpq 0x414210	rip=414210
414210	ff 35 f2 0d 42 00	pushq 0x420df2(%rip) # 0x835008	M8[7fffffffd638]=f7ffe150 rip=414216 rsp=7fffffffd638
414216	ff 25 f4 0d 42 00	jmpq *0x420df4(%rip)        # 0x835010	rip=7ffff7df0980
7ffff7df0980	c5 75 56 c0	vorpd %ymm0 %ymm1 %ymm8	rip=7ffff7df0984
7ffff7df0984	c5 65 56 ca	vorpd %ymm2 %ymm3 %ymm9	rip=7ffff7df0988
7ffff7df0988	c5 55 56 d4	vorpd %ymm4 %ymm5 %ymm10	rip=7ffff7df098c
7ffff7df098c	c5 45 56 de	vorpd %ymm6 %ymm7 %ymm11	rip=7ffff7df0990
7ffff7df0990	c4 41 35 56 c8	vorpd %ymm8 %ymm9 %ymm9	rip=7ffff7df0995
7ffff7df0995	c4 41 25 56 d2	vorpd %ymm10 %ymm11 %ymm10	rip=7ffff7df099a
7ffff7df099a	c4 41 39 76 c0	vpcmpeqd %xmm8 %xmm8 %xmm8	rip=7ffff7df099f
7ffff7df099f	c4 41 2d 56 d1	vorpd %ymm9 %ymm10 %ymm10	rip=7ffff7df09a4
7ffff7df09a4	c4 42 7d 17 c2	vptest %ymm10 %ymm8	rip=7ffff7df09a9
7ffff7df09a9	f2 0f 83 30 00 00 00	bnd jae 0x7ffff7df09e0 <_dl_runtime_resolve_avx>	rip=7ffff7df09b0
7ffff7df09b0	c5 f8 77	vzeroupper	rip=7ffff7df09b3
7ffff7df09b3	f2 e9 67 09 00 00	bnd jmpq 0x7ffff7df1320 <_dl_runtime_resolve_sse_vex>	rip=7ffff7df1320
7ffff7df1320	48 81 ec f8 00 00 00	sub $0xf8 %rsp	rip=7ffff7df1327 rsp=7fffffffd540
7ffff7df1327	48 89 84 24 c0 00 00 00	mov %rax 0xc0(%rsp)	M8[7fffffffd600]=0 rip=7ffff7df132f
7ffff7df132f	48 89 8c 24 c8 00 00 00	mov %rcx 0xc8(%rsp)	M8[7fffffffd608]=f19e7400	rip=7ffff7df1337
7ffff7df1337	48 89 94 24 d0 00 00 00	mov %rdx 0xd0(%rsp)	M8[7fffffffd610]=1 rip=0x7ffff7df133f
0x7ffff7df133f	48 89 b4 24 d8 00 00 00	mov %rsi 0xd8(%rsp)	M8[7fffffffd618]=1 rip=7ffff7df1347
7ffff7df1347	48 89 bc 24 e0 00 00 00	mov %rdi 0xe0(%rsp)	M8[7fffffffd620]=ffffd65b rip=ffff7df134f
ffff7df134f	4c 89 84 24 e8 00 00 00	mov %r8 0xe8(%rsp)	M8[7fffffffd628]=f19e7060 rip=7ffff7df1357
7ffff7df1357	4c 89 8c 24 f0 00 00 00	mov %r9 0xf0(%rsp)	M8[7fffffffd630]=10f241b rip=7ffff7df135f
7ffff7df135f	c5 fa 7f 04 24	vmovdqu %xmm0 (%rsp)	M8[7fffffffd540]=0 rip=7ffff7df1364
7ffff7df1364	c5 fa 7f 4c 24 10	vmovdqu %xmm1 0x10(%rsp)





































